"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[3010],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),l=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=l(e.components);return o.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=l(n),u=a,h=c["".concat(p,".").concat(u)]||c[u]||m[u]||r;return n?o.createElement(h,s(s({ref:t},d),{},{components:n})):o.createElement(h,s({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:a,s[1]=i;for(var l=2;l<r;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4669:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var o=n(7462),a=(n(7294),n(3905));const r={},s=void 0,i={unversionedId:"Components/CreateContentPage/GeneratedResponseCard/GeneratedResponseCard",id:"Components/CreateContentPage/GeneratedResponseCard/GeneratedResponseCard",title:"GeneratedResponseCard",description:"The GeneratedResponseCard component is a reusable UI component used to display a generated response along with action",source:"@site/docs/Components/CreateContentPage/GeneratedResponseCard/GeneratedResponseCard.md",sourceDirName:"Components/CreateContentPage/GeneratedResponseCard",slug:"/Components/CreateContentPage/GeneratedResponseCard/",permalink:"/Components/CreateContentPage/GeneratedResponseCard/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/CreateContentPage/GeneratedResponseCard/GeneratedResponseCard.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AvatarAndNameForPreview",permalink:"/Components/CreateContentPage/AvatarAndNameForPreview/"},next:{title:"ListingItem",permalink:"/Components/CreateContentPage/ListingItem/"}},p={},l=[{value:"Props",id:"props",level:4},{value:"Example Usage",id:"example-usage",level:4},{value:"Component Structure",id:"component-structure",level:4},{value:"Hooks",id:"hooks",level:4},{value:"Handlers",id:"handlers",level:4},{value:"Effects",id:"effects",level:4},{value:"Styling",id:"styling",level:4},{value:"Memoization",id:"memoization",level:4},{value:"Overall Functionality",id:"overall-functionality",level:4}],d={toc:l},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GeneratedResponseCard")," component is a reusable UI component used to display a generated response along with action\nbuttons for copying, regenerating, and choosing the generated content."),(0,a.kt)("h4",{id:"props"},"Props"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GeneratedResponseCard")," component accepts the following props:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"response"),": An object containing the generated response information."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setChosenGeneratedResponse"),": A function to set the chosen generated response."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"handleRegenerateResponse"),": A function to regenerate the response.")),(0,a.kt)("h4",{id:"example-usage"},"Example Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"import GeneratedResponseCard from './GeneratedResponseCard'; // Import the component\n\nconst ContentGenerator = () => {\n    const response = {\n        id: 1,\n        text: 'This is a generated response.',\n        prompt: 'Generate',\n        promptAdjective: 'short',\n    };\n\n    const setChosenGeneratedResponse = (response) => {\n        // ... logic to set the chosen response ...\n    };\n\n    const handleRegenerateResponse = (prompt, adjective, id) => {\n        // ... logic to regenerate the response ...\n    };\n\n    return (\n        <div>\n            <GeneratedResponseCard\n                response={response}\n                setChosenGeneratedResponse={setChosenGeneratedResponse}\n                handleRegenerateResponse={handleRegenerateResponse}\n            />\n        </div>\n    );\n};\n")),(0,a.kt)("h4",{id:"component-structure"},"Component Structure"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GeneratedResponseCard")," component is structured as follows:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Card Container:")," A ",(0,a.kt)("inlineCode",{parentName:"p"},"Card")," component that serves as the main container for the generated response card. It applies\nstyling for width, padding, and layout.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Typography:")," A ",(0,a.kt)("inlineCode",{parentName:"p"},"Typography")," component that displays the generated response text. It takes the ",(0,a.kt)("inlineCode",{parentName:"p"},"response.text")," prop\nand applies styling for line height.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Action Buttons Container:")," A ",(0,a.kt)("inlineCode",{parentName:"p"},"Box")," component that contains the action buttons for copying, regenerating, and\nchoosing the generated content.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Regenerate Button:")," An ",(0,a.kt)("inlineCode",{parentName:"p"},"IconButton")," component with a tooltip that regenerates the response when clicked. It takes\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"handleRegenerateResponse")," function as a click handler and applies styling for the icon button.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Copy Button:")," An ",(0,a.kt)("inlineCode",{parentName:"p"},"IconButton")," component with a tooltip that copies the response to the clipboard. It takes\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"handleCopyGeneratedResponse")," function as a copy handler and applies styling for the icon button. The button icon\nchanges based on whether the content was copied or not.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Choose Button:")," An ",(0,a.kt)("inlineCode",{parentName:"p"},"IconButton")," component with a tooltip that allows choosing the generated content. It takes\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"setChosenGeneratedResponse")," function as a click handler and applies styling for the icon button."))),(0,a.kt)("h4",{id:"hooks"},"Hooks"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isCopied"),": A state variable managed by the ",(0,a.kt)("inlineCode",{parentName:"li"},"useState")," hook to track whether the response text was copied to the\nclipboard.")),(0,a.kt)("h4",{id:"handlers"},"Handlers"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"handleCopyGeneratedResponse"),": A function that sets the ",(0,a.kt)("inlineCode",{parentName:"li"},"isCopied")," state variable to ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),", indicating that the\nresponse text was copied.")),(0,a.kt)("h4",{id:"effects"},"Effects"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"useEffect")," hook is used to automatically reset the ",(0,a.kt)("inlineCode",{parentName:"li"},"isCopied")," state variable to ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," after a delay when the\nresponse text is copied.")),(0,a.kt)("h4",{id:"styling"},"Styling"),(0,a.kt)("p",null,"The component utilizes the Material-UI library's styling system. It applies styling for various components such as\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"Card"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Typography"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"IconButton")," using the provided ",(0,a.kt)("inlineCode",{parentName:"p"},"sx")," styles."),(0,a.kt)("h4",{id:"memoization"},"Memoization"),(0,a.kt)("p",null,"The component is memoized using the ",(0,a.kt)("inlineCode",{parentName:"p"},"memo")," function from React to optimize re-renders when the props do not change."),(0,a.kt)("h4",{id:"overall-functionality"},"Overall Functionality"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"GeneratedResponseCard")," component provides a user-friendly way to display generated responses along with action\nbuttons for copying, regenerating, and choosing the content. It offers visual cues such as changing icons for copied\ncontent and tooltips for each action. The component is suitable for content generation interfaces and other scenarios\nwhere generated responses need to be managed."))}m.isMDXComponent=!0}}]);