"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[9412],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>g});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(t),u=i,g=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return t?a.createElement(g,r(r({ref:n},c),{},{components:t})):a.createElement(g,r({ref:n},c))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[d]="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8615:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=t(7462),i=(t(7294),t(3905));const o={},r=void 0,s={unversionedId:"Pages/Main page/MainPageProvider",id:"Pages/Main page/MainPageProvider",title:"MainPageProvider",description:"The MainPageProvider component is responsible for providing context and data to the MainPage component. It",source:"@site/docs/Pages/Main page/MainPageProvider.md",sourceDirName:"Pages/Main page",slug:"/Pages/Main page/MainPageProvider",permalink:"/sgpt-docs/Pages/Main page/MainPageProvider",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Pages/Main page/MainPageProvider.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MainPage",permalink:"/sgpt-docs/Pages/Main page/MainPage"},next:{title:"ProfilePage",permalink:"/sgpt-docs/Pages/Profile page/ProfilePage"}},l={},p=[{value:"Imports",id:"imports",level:3},{value:"MainPageContext",id:"mainpagecontext",level:3},{value:"MainPageProvider Component",id:"mainpageprovider-component",level:3},{value:"useMainPageProvider Hook",id:"usemainpageprovider-hook",level:3},{value:"Export",id:"export",level:3}],c={toc:p},d="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"MainPageProvider")," component is responsible for providing context and data to the ",(0,i.kt)("inlineCode",{parentName:"p"},"MainPage")," component. It\nencapsulates the logic for fetching and handling listings data, managing filters, and handling pagination."),(0,i.kt)("h3",{id:"imports"},"Imports"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"import React, {createContext, memo, useContext, useMemo} from 'react';\nimport MainPage from './MainPage';\nimport useHandleListings from '../../hooks/useHandleListings/useHandleListings';\nimport {useAppProvider} from '../Layout/LayoutProvider';\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createContext"),": Creates a context for sharing data."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"memo"),": Memoizes the component for performance optimization."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MainPage"),": The component that consumes the context provided by ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageProvider"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"useHandleListings"),": A custom hook for fetching and handling listings data."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"useAppProvider"),": A custom hook for accessing application-level context from ",(0,i.kt)("inlineCode",{parentName:"li"},"LayoutProvider"),".")),(0,i.kt)("h3",{id:"mainpagecontext"},"MainPageContext"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"const MainPageContext = createContext(null);\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MainPageContext")," is a context object created using the ",(0,i.kt)("inlineCode",{parentName:"li"},"createContext")," function. It will hold the data shared across\ncomponents within the ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageProvider"),".")),(0,i.kt)("h3",{id:"mainpageprovider-component"},"MainPageProvider Component"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"const MainPageProvider = () => {\n    //@@viewOn:hooks\n    const {\n        currentPage,\n        rooms,\n        setCurrentPage,\n        setRooms,\n        isFilterModalOpen,\n        setIsFilterModalOpen,\n        regions,\n        setRegions,\n        filterOptions,\n    } = useAppProvider();\n\n    const { data, isLoading, isFetching, error } = useHandleListings({\n        filterOptions,\n        currentPage,\n        regions,\n        rooms,\n        setCurrentPage,\n        setRooms,\n    });\n    //@@viewOff:hooks\n\n    //@@viewOn:context\n    const contextValue = useMemo(\n        () => ({\n            error,\n            rooms,\n            regions,\n            setRegions,\n            currentPage,\n            setCurrentPage,\n            isFilterModalOpen,\n            setIsFilterModalOpen,\n            isFetching: isLoading || isFetching,\n            totalListings: data?.length || 0,\n        }),\n        [\n            error,\n            rooms,\n            regions,\n            setRegions,\n            currentPage,\n            setCurrentPage,\n            isFilterModalOpen,\n            setIsFilterModalOpen,\n            isFetching,\n            data,\n        ],\n    );\n    //@@viewOff:context\n\n    return (\n        <MainPageContext.Provider value={contextValue}>\n            <MainPage />\n        </MainPageContext.Provider>\n    );\n};\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageProvider")," component encapsulates the logic for fetching and managing listings data and provides it to\nthe ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPage")," component through context."),(0,i.kt)("li",{parentName:"ul"},"The component uses the ",(0,i.kt)("inlineCode",{parentName:"li"},"useAppProvider")," hook to access context values and actions from the ",(0,i.kt)("inlineCode",{parentName:"li"},"LayoutProvider"),"."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"useHandleListings")," hook is used to fetch and handle listings data based on filter options, current page, regions,\nrooms, and various actions."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"contextValue")," object holds the data and actions that will be available to components consuming\nthe ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageContext"),"."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"useMemo")," hook memoizes the ",(0,i.kt)("inlineCode",{parentName:"li"},"contextValue")," to prevent unnecessary re-rendering."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPage")," component is wrapped in the ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageContext.Provider")," to provide the context data to its child\ncomponents.")),(0,i.kt)("h3",{id:"usemainpageprovider-hook"},"useMainPageProvider Hook"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"const useMainPageProvider = () => {\n    const context = useContext(MainPageContext);\n    if (!context) {\n        throw new Error('useMainPageProvider must be used within a MainPageProvider');\n    }\n    return context;\n};\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"useMainPageProvider")," hook is used to access the context values provided by ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageProvider"),"."),(0,i.kt)("li",{parentName:"ul"},"It uses the ",(0,i.kt)("inlineCode",{parentName:"li"},"useContext")," hook to retrieve the context values from the nearest ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageContext.Provider")," ancestor."),(0,i.kt)("li",{parentName:"ul"},"If the hook is used outside the context provider, it throws an error.")),(0,i.kt)("h3",{id:"export"},"Export"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"export default memo(MainPageProvider);\nexport { useMainPageProvider };\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageProvider")," component is exported as a memoized component for performance optimization."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"useMainPageProvider")," hook is also exported for components that need to access the context values\nfrom ",(0,i.kt)("inlineCode",{parentName:"li"},"MainPageProvider"),".")))}m.isMDXComponent=!0}}]);