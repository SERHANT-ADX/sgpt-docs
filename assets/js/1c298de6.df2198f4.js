"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[8487],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),d=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,g=u["".concat(o,".").concat(m)]||u[m]||c[m]||r;return n?i.createElement(g,l(l({ref:t},p),{},{components:n})):i.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:a,l[1]=s;for(var d=2;d<r;d++)l[d]=n[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8337:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var i=n(7462),a=(n(7294),n(3905));const r={},l=void 0,s={unversionedId:"Hooks/useGetDetailedListing",id:"Hooks/useGetDetailedListing",title:"useGetDetailedListing",description:"The useGetDetailedListing custom hook is designed for fetching detailed information about a specific listing using the @tanstack/react-query library. This hook is intended to be used in a React application and provides functionality for loading the detailed listing data, managing loading states, and handling potential errors.",source:"@site/docs/Hooks/useGetDetailedListing.md",sourceDirName:"Hooks",slug:"/Hooks/useGetDetailedListing",permalink:"/sgpt-docs/Hooks/useGetDetailedListing",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Hooks/useGetDetailedListing.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useGetChatThreads",permalink:"/sgpt-docs/Hooks/useGetChatThreads"},next:{title:"useGetGeneratedImages",permalink:"/sgpt-docs/Hooks/useGetGeneratedImages"}},o={},d=[{value:"Usage",id:"usage",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Return Values",id:"return-values",level:3},{value:"Functionality",id:"functionality",level:3},{value:"Example Usage",id:"example-usage",level:3}],p={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useGetDetailedListing")," custom hook is designed for fetching detailed information about a specific listing using the ",(0,a.kt)("inlineCode",{parentName:"p"},"@tanstack/react-query")," library. This hook is intended to be used in a React application and provides functionality for loading the detailed listing data, managing loading states, and handling potential errors."),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"import useGetDetailedListing from './useGetDetailedListing';\n\n// Inside a functional component\nconst { detailedListingData, detailedListingIsLoading, isError } = useGetDetailedListing({ listingId });\n")),(0,a.kt)("h3",{id:"parameters"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"listingId")," (String or null): A string representing the unique identifier of the listing to fetch detailed information for. If ",(0,a.kt)("inlineCode",{parentName:"li"},"listingId")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),", the hook will return ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," for ",(0,a.kt)("inlineCode",{parentName:"li"},"detailedListingData"),".")),(0,a.kt)("h3",{id:"return-values"},"Return Values"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"detailedListingData")," (Object or null): An object containing the retrieved detailed listing data or ",(0,a.kt)("inlineCode",{parentName:"li"},"null")," if the data hasn't been fetched yet or if ",(0,a.kt)("inlineCode",{parentName:"li"},"listingId")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"detailedListingIsLoading")," (Boolean): Indicates whether the data is currently being fetched (true) or not (false)."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"isError")," (Boolean): Indicates whether an error occurred during the data fetching process (true) or not (false).")),(0,a.kt)("h3",{id:"functionality"},"Functionality"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Importing Dependencies"),": The hook starts by importing necessary dependencies like ",(0,a.kt)("inlineCode",{parentName:"p"},"useQuery")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"@tanstack/react-query")," for data fetching and ",(0,a.kt)("inlineCode",{parentName:"p"},"RoomsAPI")," for making API requests.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Defining the Custom Hook"),": The ",(0,a.kt)("inlineCode",{parentName:"p"},"useGetDetailedListing")," function is defined, which will be used to fetch the detailed listing data.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Using ",(0,a.kt)("inlineCode",{parentName:"strong"},"useQuery")),": Inside the custom hook, the ",(0,a.kt)("inlineCode",{parentName:"p"},"useQuery")," hook from ",(0,a.kt)("inlineCode",{parentName:"p"},"@tanstack/react-query")," is used to perform the actual data fetching. It takes an object with various properties:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"queryKey"),": This specifies a unique key for this query, which includes the string ",(0,a.kt)("inlineCode",{parentName:"p"},"'detailedListing'")," and the ",(0,a.kt)("inlineCode",{parentName:"p"},"listingId")," passed as a parameter. This ensures that the query is specific to the given ",(0,a.kt)("inlineCode",{parentName:"p"},"listingId"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"queryFn"),": This is an async function that performs the actual data retrieval. It checks if ",(0,a.kt)("inlineCode",{parentName:"p"},"listingId")," is not null, and if so, it fetches detailed listing information using the ",(0,a.kt)("inlineCode",{parentName:"p"},"RoomsAPI.getListingItemById")," method. It then returns the first item from the result if available, or ",(0,a.kt)("inlineCode",{parentName:"p"},"null")," if no data is found.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"staleTime")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"cacheTime"),": These properties define the caching behavior. In this example, both are set to 10 minutes (10 ",(0,a.kt)("em",{parentName:"p"}," 60 "),' 1000 milliseconds), meaning the data will be considered "stale" after this time and will be refetched if needed.')))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Return Values"),": The hook returns three values - ",(0,a.kt)("inlineCode",{parentName:"p"},"detailedListingData"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"detailedListingIsLoading"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"isError"),". These values can be used in a React component to handle loading states, display detailed listing information, and handle errors as needed."))),(0,a.kt)("h3",{id:"example-usage"},"Example Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"import React from 'react';\nimport useGetDetailedListing from './useGetDetailedListing';\n\nfunction ListingDetails({ listingId }) {\n  const { detailedListingData, detailedListingIsLoading, isError } = useGetDetailedListing({ listingId });\n\n  if (detailedListingIsLoading) {\n    return <div>Loading detailed listing...</div>;\n  }\n\n  if (isError) {\n    return <div>Error: Unable to fetch detailed listing data.</div>;\n  }\n\n  if (!detailedListingData) {\n    return <div>No detailed listing data available.</div>;\n  }\n\n  return (\n    <div>\n      <h2>{detailedListingData.title}</h2>\n      <p>{detailedListingData.description}</p>\n      {/* Render other details */}\n    </div>\n  );\n}\n\nexport default ListingDetails;\n")),(0,a.kt)("p",null,"In this example, the ",(0,a.kt)("inlineCode",{parentName:"p"},"useGetDetailedListing")," hook is used within a React component to fetch and display detailed listing information, handling loading states and potential errors."))}c.isMDXComponent=!0}}]);