"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[1803],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,g=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?i.createElement(g,a(a({ref:t},c),{},{components:n})):i.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3291:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const o={},a=void 0,l={unversionedId:"Components/ProfilePage/ProfileListingItem/ProfileListingOutletProvider",id:"Components/ProfilePage/ProfileListingItem/ProfileListingOutletProvider",title:"ProfileListingOutletProvider",description:"The ProfileListingOutletProvider component is a React functional component designed to act as an intermediary between",source:"@site/docs/Components/ProfilePage/ProfileListingItem/ProfileListingOutletProvider.md",sourceDirName:"Components/ProfilePage/ProfileListingItem",slug:"/Components/ProfilePage/ProfileListingItem/ProfileListingOutletProvider",permalink:"/sgpt-docs/Components/ProfilePage/ProfileListingItem/ProfileListingOutletProvider",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/ProfilePage/ProfileListingItem/ProfileListingOutletProvider.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ProfileListingItem",permalink:"/sgpt-docs/Components/ProfilePage/ProfileListingItem/"},next:{title:"ProfileListings",permalink:"/sgpt-docs/Components/ProfilePage/ProfileListings/"}},p={},s=[{value:"Props",id:"props",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"Usage",id:"usage",level:3}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component is a React functional component designed to act as an intermediary between\nthe routing logic and the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingItem")," component. Its primary purpose is to obtain specific props from the\nrouting context provided by the ",(0,r.kt)("inlineCode",{parentName:"p"},"react-router-dom")," library's ",(0,r.kt)("inlineCode",{parentName:"p"},"<Outlet />")," component and pass them to\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingItem")," component. This allows the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingItem")," component to receive context-specific data and\nfunctions needed for rendering a real estate listing within a user's profile."),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component does not accept any props directly. Instead, it relies on the props\nobtained from the routing context, which include the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"setActiveListing:")," A function to set the active listing within the profile page. This function is typically used to\nupdate the currently displayed listing when the user navigates between different listings in their profile.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"listing:")," An object representing the details of the real estate listing to be displayed. This object includes\ninformation such as the listing's images, price, and description.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"isMobile:")," A boolean value indicating whether the user is accessing the profile page on a mobile device. This\ninformation can be useful for responsive rendering within the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingItem")," component.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"handleToggleLikeListingItem:"),' A function for toggling the "like" status of the listing. When called, this function\nupdates the like status of the listing, allowing the user to add or remove it from their favorites.'))),(0,r.kt)("h3",{id:"component-structure"},"Component Structure"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component has a simple structure:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"useOutletContext")," hook from ",(0,r.kt)("inlineCode",{parentName:"p"},"react-router-dom")," to access the routing context provided by the\nparent ",(0,r.kt)("inlineCode",{parentName:"p"},"<Outlet />")," component.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It extracts the required props (",(0,r.kt)("inlineCode",{parentName:"p"},"setActiveListing"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"listing"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"isMobile"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"handleToggleLikeListingItem"),") from the\nrouting context.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"It renders the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingItem")," component and passes these extracted props to it."))),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"To use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Import the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component into your application."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"import ProfileListingOutletProvider from './ProfileListingOutletProvider';\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Place the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component within your routing configuration where you want to render real\nestate listings within the user's profile."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},'<Route\n    path="profile/"\n    element={<ProfilePageProviderLazy />}\n>\n    <Route\n        path="listing/:id"\n        element={<ProfileListingOutletProvider />}\n    >\n</ Route>\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ensure that the parent ",(0,r.kt)("inlineCode",{parentName:"p"},"<Outlet />")," component is configured in your routing structure, as it is responsible for\nproviding the necessary context to ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component will receive context-specific props from the routing logic and pass them\nto the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingItem")," component."))),(0,r.kt)("p",null,"By using the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingOutletProvider")," component, you can keep your routing logic clean and focused on navigating\nbetween different listings within the user's profile while providing the required data and functions to\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileListingItem")," component for rendering specific listing details. This separation of concerns enhances code\norganization and maintainability."))}m.isMDXComponent=!0}}]);