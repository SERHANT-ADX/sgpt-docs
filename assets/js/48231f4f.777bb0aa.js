"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[3779],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=s(n),c=r,u=d["".concat(p,".").concat(c)]||d[c]||g[c]||i;return n?a.createElement(u,o(o({ref:t},m),{},{components:n})):a.createElement(u,o({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4959:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const i={},o=void 0,l={unversionedId:"Components/ProfilePage/ProfileGeneratedImages/ProfileGeneratedImages",id:"Components/ProfilePage/ProfileGeneratedImages/ProfileGeneratedImages",title:"ProfileGeneratedImages",description:"The ProfileGeneratedImages component is a React functional component designed to display a list of generated images",source:"@site/docs/Components/ProfilePage/ProfileGeneratedImages/ProfileGeneratedImages.md",sourceDirName:"Components/ProfilePage/ProfileGeneratedImages",slug:"/Components/ProfilePage/ProfileGeneratedImages/",permalink:"/sgpt-docs/Components/ProfilePage/ProfileGeneratedImages/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/ProfilePage/ProfileGeneratedImages/ProfileGeneratedImages.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ProfileEmptyView",permalink:"/sgpt-docs/Components/ProfilePage/ProfileEmptyView/"},next:{title:"ProfileListingItem",permalink:"/sgpt-docs/Components/ProfilePage/ProfileListingItem/"}},p={},s=[{value:"Dependencies",id:"dependencies",level:3},{value:"Props",id:"props",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"Usage",id:"usage",level:3}],m={toc:s},d="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component is a React functional component designed to display a list of generated images\nassociated with a user's profile. It also provides a loading indicator during data retrieval and an empty state view\nwhen no generated images are available. Users can interact with each generated image, and the component allows them to\ntoggle their liking status on each image."),(0,r.kt)("h3",{id:"dependencies"},"Dependencies"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component relies on the following dependencies:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"useProfilePage")," Hook:")," It imports the ",(0,r.kt)("inlineCode",{parentName:"p"},"useProfilePage")," hook from the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfilePageProvider")," to access generated\nimage data, loading status, and the ability to toggle the liking status of images.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Material-UI:")," It utilizes Material-UI components such as ",(0,r.kt)("inlineCode",{parentName:"p"},"Box"),", icons, and ",(0,r.kt)("inlineCode",{parentName:"p"},"Loader"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"GeneratedImageItem")," Component:")," It uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"GeneratedImageItem")," component to display individual generated images.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"ProfileEmptyView")," Component:")," It uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component to display a message and icon when no\ngenerated images are found.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"useDocumentTitle")," Hook:")," It uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"useDocumentTitle")," hook from the ",(0,r.kt)("inlineCode",{parentName:"p"},"usehooks-ts")," library to dynamically set the\ndocument title."))),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component does not accept any props directly. Instead, it relies on the data obtained from\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"useProfilePage")," hook to render the list of generated images and manage their liking status."),(0,r.kt)("h3",{id:"component-structure"},"Component Structure"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component is structured as follows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Document Title (",(0,r.kt)("inlineCode",{parentName:"strong"},"useDocumentTitle"),"):")," It uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"useDocumentTitle"),' hook to dynamically set the document title\nto "Profile Generated Images | S.GPT" to provide users with a clear page title.')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Loader (Loading Indicator):")," If ",(0,r.kt)("inlineCode",{parentName:"p"},"generatedImagesIsLoading")," is ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", it displays a loading indicator (",(0,r.kt)("inlineCode",{parentName:"p"},"Loader"),")\nto inform users that data is being loaded. This ensures a smooth user experience during data retrieval.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Generated Items List (",(0,r.kt)("inlineCode",{parentName:"strong"},"generatedItemsList"),"):")," This section displays the list of generated images."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Generated Image Items:")," Each generated image is rendered as a ",(0,r.kt)("inlineCode",{parentName:"li"},"GeneratedImageItem")," component. The component\niterates through the ",(0,r.kt)("inlineCode",{parentName:"li"},"generatedImages")," array and displays each generated image along with liking and viewing\noptions."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Profile Empty View (",(0,r.kt)("inlineCode",{parentName:"strong"},"ProfileEmptyView"),"):")," If there are no generated images (",(0,r.kt)("inlineCode",{parentName:"p"},"!generatedImages?.length"),"),\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView"),' component is rendered with a message ("No generated images found") and an\nicon (',(0,r.kt)("inlineCode",{parentName:"p"},"ImageNotSupported"),") indicating that no images are available."))),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"To use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Import the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component into your application."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"static",static:!0},"import ProfileGeneratedImages from './ProfileGeneratedImages';\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Include the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component within your application's UI, typically within the user's profile page\nor any route where generated images should be displayed."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"static",static:!0},"<ProfileGeneratedImages />\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileGeneratedImages")," component will render a list of generated images, each with options to toggle liking\nstatus and view the image. If there are no generated images, it will display a message and icon indicating that no\nimages are available."))))}g.isMDXComponent=!0}}]);