"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[1555],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=i.createContext({}),p=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(l.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),u=a,g=m["".concat(l,".").concat(u)]||m[u]||d[u]||r;return n?i.createElement(g,o(o({ref:t},c),{},{components:n})):i.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<r;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8012:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const r={},o=void 0,s={unversionedId:"Components/common/ListingsMap/ListingsMapContainer",id:"Components/common/ListingsMap/ListingsMapContainer",title:"ListingsMapContainer",description:"The ListingsMapContainer component is responsible for rendering and managing a Leaflet map displaying markers for",source:"@site/docs/Components/common/ListingsMap/ListingsMapContainer.md",sourceDirName:"Components/common/ListingsMap",slug:"/Components/common/ListingsMap/ListingsMapContainer",permalink:"/sgpt-docs/Components/common/ListingsMap/ListingsMapContainer",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/common/ListingsMap/ListingsMapContainer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ListingMarker",permalink:"/sgpt-docs/Components/common/ListingsMap/ListingMarker"},next:{title:"Application Folder Structure",permalink:"/sgpt-docs/General/project-structure"}},l={},p=[{value:"Props:",id:"props",level:3},{value:"Usage:",id:"usage",level:3},{value:"Map Styles:",id:"map-styles",level:3},{value:"Local Storage:",id:"local-storage",level:3},{value:"Map Features:",id:"map-features",level:3},{value:"LayersControl:",id:"layerscontrol",level:4},{value:"LayersControl.BaseLayer:",id:"layerscontrolbaselayer",level:4},{value:"ListingMarker:",id:"listingmarker",level:4},{value:"ListingMapControls:",id:"listingmapcontrols",level:4},{value:"Overall Purpose:",id:"overall-purpose",level:4}],c={toc:p},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ListingsMapContainer")," component is responsible for rendering and managing a Leaflet map displaying markers for\nlistings. It allows users to switch between different map styles and provides a control for selecting a baselayer.\nAdditionally, it supports displaying both standard listings and a selected listing with a distinctive marker."),(0,a.kt)("h3",{id:"props"},"Props:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"listings")," (Array): An array of listing objects, each containing information about a property or listing."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"selectedListingItem")," (Object): Information about the currently selected listing item to be highlighted on the map.")),(0,a.kt)("h3",{id:"usage"},"Usage:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ListingsMapContainer")," component should be included within your application's component hierarchy to display a map\nwith listing markers. You can use it as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"static",static:!0},"<ListingsMapContainer listings={listingsData} selectedListingItem={selectedListing}/>\n")),(0,a.kt)("p",null,"In this example, ",(0,a.kt)("inlineCode",{parentName:"p"},"listingsData")," is an array of listing objects, and ",(0,a.kt)("inlineCode",{parentName:"p"},"selectedListing")," is an object representing the\ncurrently selected listing to be highlighted on the map."),(0,a.kt)("h3",{id:"map-styles"},"Map Styles:"),(0,a.kt)("p",null,'The component supports different map styles, such as "default," "Alidade," and "Stadia." These styles are defined in\nthe ',(0,a.kt)("inlineCode",{parentName:"p"},"mapStyles")," object at the beginning of the component. Users can switch between these styles using the LayersControl\nprovided by Leaflet."),(0,a.kt)("h3",{id:"local-storage"},"Local Storage:"),(0,a.kt)("p",null,"The component uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"useLocalStorage")," hook to store and retrieve the selected map layer's name in local storage. This\nallows the user's selected map style to persist across sessions."),(0,a.kt)("h3",{id:"map-features"},"Map Features:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"scrollWheelZoom"),": Enables zooming in and out using the mouse scroll wheel."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"wheelPxPerZoomLevel"),": Specifies the speed of zooming with the mouse wheel."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"center"),": Sets the initial center coordinates of the map based on the selectedListingItem."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"zoom"),": Sets the initial zoom level of the map."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"minZoom"),": Specifies the minimum zoom level allowed for the map.")),(0,a.kt)("h4",{id:"layerscontrol"},"LayersControl:"),(0,a.kt)("p",null,"The LayersControl component is provided by Leaflet and allows users to toggle between different map layers or styles. It\nis positioned at the top right corner of the map."),(0,a.kt)("h4",{id:"layerscontrolbaselayer"},"LayersControl.BaseLayer:"),(0,a.kt)("p",null,"This component represents each map style within the LayersControl. Users can select a map style by clicking on the\ncorresponding radio button."),(0,a.kt)("h4",{id:"listingmarker"},"ListingMarker:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ListingMarker")," component is used to display markers on the map for each listing. It receives information about a\nlisting and an ",(0,a.kt)("inlineCode",{parentName:"p"},"isSelected")," prop to determine whether the listing should have an active marker."),(0,a.kt)("h4",{id:"listingmapcontrols"},"ListingMapControls:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ListingMapControls")," component is responsible for handling changes in the map's baselayer. It listens for the '\nbaselayerchange' event and updates the selected map layer in the component's state. This control component allows users\nto switch between different map styles."),(0,a.kt)("h4",{id:"overall-purpose"},"Overall Purpose:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ListingsMapContainer")," component provides an interactive map display for listings, with support for changing map\nstyles and highlighting a selected listing. It enhances the user experience by allowing users to explore property\nlistings visually on a map. Additionally, it remembers the user's preferred map style across sessions for a consistent\nexperience."))}d.isMDXComponent=!0}}]);