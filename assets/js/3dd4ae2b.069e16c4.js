"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[8660],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),c=s(t),g=a,m=c["".concat(l,".").concat(g)]||c[g]||d[g]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p[c]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6803:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=t(7462),a=(t(7294),t(3905));const o={},i=void 0,p={unversionedId:"App",id:"App",title:"App",description:"The App component serves as the entry point and main configuration hub for the entire application. It sets up",source:"@site/docs/App.md",sourceDirName:".",slug:"/App",permalink:"/sgpt-docs/App",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/App.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Serhant GPT API",permalink:"/sgpt-docs/API/Serhant_API_Documentation"},next:{title:"ChatControls",permalink:"/sgpt-docs/Components/ChatPage/ChatControls/"}},l={},s=[{value:"Import Statements",id:"import-statements",level:3},{value:"QueryClient Configuration",id:"queryclient-configuration",level:3},{value:"Router Configuration",id:"router-configuration",level:3},{value:"App Component",id:"app-component",level:3},{value:"ThemeProvider",id:"themeprovider",level:4},{value:"QueryClientProvider",id:"queryclientprovider",level:4},{value:"RouterProvider",id:"routerprovider",level:4},{value:"ReactQueryDevtools",id:"reactquerydevtools",level:4},{value:"Conclusion",id:"conclusion",level:3}],u={toc:s},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(c,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"App")," component serves as the entry point and main configuration hub for the entire application. It sets up\nessential components and libraries to ensure a smooth user experience. Let's break down its structure and purpose:"),(0,a.kt)("h3",{id:"import-statements"},"Import Statements"),(0,a.kt)("p",null,"At the beginning of the file, various modules and components are imported, including styling files, router-related\nmodules, custom components, and utilities. These imports are essential for the ",(0,a.kt)("inlineCode",{parentName:"p"},"App")," component's functionality."),(0,a.kt)("p",null,"All pages have dynamic imports for lazy loading and making the application faster:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"const MainPageProviderLazy = lazy(() => import('./pages/MainPage/MainPageProvider'));\nconst CreateContentPageProviderLazy = lazy(() => import('./pages/CreateContentPage/CreateContentPageProvider'));\nconst ChatPageProviderLazy = lazy(() => import('./pages/ChatPage/ChatPageProvider'));\nconst LoginPageLazy = lazy(() => import('./pages/LoginPage/LoginPage'));\nconst EditingPhotosPageProviderLazy = lazy(() => import('./pages/EditingPhotosPage/EditingPhotosPageProvider'));\nconst ProfilePageProviderLazy = lazy(() => import('./pages/ProfilePage/ProfilePageProvider'));\nconst ListingItemPageProviderLazy = lazy(() => import('./pages/ListingItemPage/ListingItemPageProvider'));\n")),(0,a.kt)("h3",{id:"queryclient-configuration"},"QueryClient Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      refetchOnMount: false,\n      refetchOnWindowFocus: false,\n      refetchInterval: false,\n      refetchOnReconnect: true,\n      retry: 3,\n      keepPreviousData: true,\n      staleTime: 10 * 1000,\n      cacheTime: 3 * 60 * 1000,\n    },\n  },\n});\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"queryClient")," is initialized using the ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryClient")," constructor. This instance manages state and data fetching with\nReact Query. Default options control query behavior, caching, and retries."),(0,a.kt)("h3",{id:"router-configuration"},"Router Configuration"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},'const router = createBrowserRouter(\n    createRoutesFromElements(\n        <Route\n            path="/"\n            hasErrorBoundary={true}\n            errorElement={<MaintenancePage />}\n            defer\n            element={\n                <Suspense\n                    fallback={\n                        <Loader\n                            sx={{ height: \'calc(100vh)\' }}\n                            disableShrink={true}\n                        />\n                    }\n                >\n                    <LayoutProvider>\n                        <Layout />\n                    </LayoutProvider>\n                </Suspense>\n            }\n        >\n            <Route\n                index\n                element={\n                    <MainPageProviderLazy>\n                        <MainPage />\n                    </MainPageProviderLazy>\n                }\n            />\n            <Route\n                path="create/:id"\n                element={\n                    <CreateContentPageProviderLazy>\n                        <CreateContentPage />\n                    </CreateContentPageProviderLazy>\n                }\n            />\n            <Route\n                path="login"\n                element={<LoginPageLazy />}\n            />\n            <Route\n                path="editing"\n                element={\n                    <EditingPhotosPageProviderLazy>\n                        <EditingPhotosPage />\n                    </EditingPhotosPageProviderLazy>\n                }\n            />\n            <Route\n                path="listing/:id"\n                element={\n                    <ListingItemPageProviderLazy>\n                        <ListingItemPageRouteProvider />\n                    </ListingItemPageProviderLazy>\n                }\n            />\n            <Route\n                path="chat/:id"\n                element={\n                    <ChatPageProviderLazy>\n                        <ChatPage />\n                    </ChatPageProviderLazy>\n                }\n            />\n            <Route\n                path="chat/"\n                element={\n                    <ChatPageProviderLazy>\n                        <ChatPage />\n                    </ChatPageProviderLazy>\n                }\n            />\n            w\n            <Route\n                path="profile/"\n                element={\n                    <ProfilePageProviderLazy>\n                        <ProfilePage />\n                    </ProfilePageProviderLazy>\n                }\n            >\n                <Route\n                    index\n                    element={<ProfileListings />}\n                />\n                <Route\n                    path="images/"\n                    element={<ProfileGeneratedImages />}\n                />\n                <Route\n                    path="chats/"\n                    element={<ProfileChats />}\n                />\n                <Route\n                    path="listing/:id"\n                    element={<ProfileListingOutletProvider />}\n                />\n                <Route\n                    path="filters/"\n                    element={<ProfileSavedFilters />}\n                />\n            </Route>\n            <Route\n                path="*"\n                element={<NotFoundPage />}\n            />\n        </Route>,\n    ),\n);\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"router")," is set up using ",(0,a.kt)("inlineCode",{parentName:"p"},"createBrowserRouter")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"createRoutesFromElements")," from React Router. It defines the\nrouting structure of the app, including nested routes and error handling."),(0,a.kt)("h3",{id:"app-component"},"App Component"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"App")," component wraps the entire application, providing the foundation for its operation. It includes the following\ncomponents:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},'const App = () => (\n  <div id="app">\n    <ThemeProvider theme={theme}>\n      <QueryClientProvider client={queryClient}>\n        <RouterProvider router={router} />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </QueryClientProvider>\n    </ThemeProvider>\n  </div>\n);\n')),(0,a.kt)("h4",{id:"themeprovider"},"ThemeProvider"),(0,a.kt)("p",null,"This component wraps the app, applying the custom theme from the ",(0,a.kt)("inlineCode",{parentName:"p"},"theme")," object to all Material-UI components. It\nensures consistent styling throughout the app."),(0,a.kt)("h4",{id:"queryclientprovider"},"QueryClientProvider"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryClientProvider")," component provides the ",(0,a.kt)("inlineCode",{parentName:"p"},"queryClient")," instance to the app. It allows components to manage data\nfetching and state using React Query. The ",(0,a.kt)("inlineCode",{parentName:"p"},"client")," prop passes the ",(0,a.kt)("inlineCode",{parentName:"p"},"queryClient"),"."),(0,a.kt)("h4",{id:"routerprovider"},"RouterProvider"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"RouterProvider")," component supplies the ",(0,a.kt)("inlineCode",{parentName:"p"},"router")," configuration to the app. It enables navigation between different\npages and components using React Router."),(0,a.kt)("h4",{id:"reactquerydevtools"},"ReactQueryDevtools"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ReactQueryDevtools")," enhances development by providing a UI for inspecting and debugging queries managed by React Query.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"initialIsOpen")," prop keeps the Devtools open by default."),(0,a.kt)("h3",{id:"conclusion"},"Conclusion"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"App")," component plays a pivotal role in configuring the app's foundation. From styling to data management and\nnavigation, it ensures a cohesive and user-friendly experience. Understanding its structure and purpose is key to\nbuilding and maintaining a successful application."))}d.isMDXComponent=!0}}]);