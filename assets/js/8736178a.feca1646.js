"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[1457],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=s(n),f=r,d=c["".concat(l,".").concat(f)]||c[f]||u[f]||o;return n?a.createElement(d,i(i({ref:t},m),{},{components:n})):a.createElement(d,i({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[c]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9206:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={},i=void 0,p={unversionedId:"Components/ProfilePage/ProfileEmptyView/ProfileEmptyView",id:"Components/ProfilePage/ProfileEmptyView/ProfileEmptyView",title:"ProfileEmptyView",description:"The ProfileEmptyView component is a React functional component designed to provide a visually appealing and",source:"@site/docs/Components/ProfilePage/ProfileEmptyView/ProfileEmptyView.md",sourceDirName:"Components/ProfilePage/ProfileEmptyView",slug:"/Components/ProfilePage/ProfileEmptyView/",permalink:"/Components/ProfilePage/ProfileEmptyView/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/ProfilePage/ProfileEmptyView/ProfileEmptyView.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ProfileChats",permalink:"/Components/ProfilePage/ProfileChats/"},next:{title:"ProfileGeneratedImages",permalink:"/Components/ProfilePage/ProfileGeneratedImages/"}},l={},s=[{value:"Props",id:"props",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"Usage",id:"usage",level:3}],m={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component is a React functional component designed to provide a visually appealing and\ninformative message along with an icon when there is no data or content to display on a page. It serves as a\nuser-friendly way to communicate to the user that no data is available for the current view."),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component accepts the following props:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"text:")," A string representing the message or text to be displayed to the user when no data is available. This text\nshould convey a clear message explaining why there is no data.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Icon:")," An icon component that serves as a visual element accompanying the message. This icon helps convey the\ncontext or nature of the empty state to the user."))),(0,r.kt)("h3",{id:"component-structure"},"Component Structure"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component is structured as follows:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Empty Wrapper (",(0,r.kt)("inlineCode",{parentName:"strong"},"emptyWrapper"),"):")," The main container for the empty view message and icon."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"FadeWrapper:")," This is a wrapper component that adds a fade-in animation effect to the content inside it. It\nprovides a smooth and visually appealing transition when the empty view is displayed.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Content:")," The content of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component consists of an icon and a message."),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Icon:")," An icon component (e.g., ",(0,r.kt)("inlineCode",{parentName:"p"},"Icon"),") that is rendered in gray and is typically used to visually\nrepresent the context or reason for the empty state.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Message (",(0,r.kt)("inlineCode",{parentName:"strong"},"text"),"):")," A Typography component displaying the text message passed as a prop. This message should\nbe clear and informative, explaining why there is no data available."))))))),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"To use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Import the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component into your application."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"static",static:!0},"import ProfileEmptyView from './ProfileEmptyView';\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Include the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProfileEmptyView")," component within your application's UI at the appropriate location where you want to\ninform users about the absence of data."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"static",static:!0},'<ProfileEmptyView\n  text="No Saved images found"\n  Icon={/* Icon component, e.g., an icon from Material-UI */}\n/>\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Customize the ",(0,r.kt)("inlineCode",{parentName:"p"},"text")," prop to provide a clear and informative message that explains why there is no data available.\nAdditionally, choose an appropriate icon (",(0,r.kt)("inlineCode",{parentName:"p"},"Icon"),") that visually represents the context or reason for the empty state."))))}u.isMDXComponent=!0}}]);