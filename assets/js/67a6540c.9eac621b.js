"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[867],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=d(n),g=a,u=c["".concat(s,".").concat(g)]||c[g]||h[g]||l;return n?o.createElement(u,r(r({ref:t},p),{},{components:n})):o.createElement(u,r({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,r=new Array(l);r[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,r[1]=i;for(var d=2;d<l;d++)r[d]=n[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},960:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var o=n(7462),a=(n(7294),n(3905));const l={},r=void 0,i={unversionedId:"Components/Modals/ChangelogModal/ChangelogModal",id:"Components/Modals/ChangelogModal/ChangelogModal",title:"ChangelogModal",description:"The ChangelogModal component is a modal dialog that displays the changelog or release notes for a new version of the",source:"@site/docs/Components/Modals/ChangelogModal/ChangelogModal.md",sourceDirName:"Components/Modals/ChangelogModal",slug:"/Components/Modals/ChangelogModal/",permalink:"/Components/Modals/ChangelogModal/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/Modals/ChangelogModal/ChangelogModal.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ChangelogDialog",permalink:"/Components/Modals/ChangelogDialog/"},next:{title:"FilterModal",permalink:"/Components/Modals/FilterModal/"}},s={},d=[{value:"Props:",id:"props",level:3},{value:"Usage:",id:"usage",level:3},{value:"Modal Content:",id:"modal-content",level:3},{value:"Fetching Changelog Content:",id:"fetching-changelog-content",level:4},{value:"Closing the Modal:",id:"closing-the-modal",level:4},{value:"Styling:",id:"styling",level:4},{value:"Toasts:",id:"toasts",level:4},{value:"Overall Purpose:",id:"overall-purpose",level:3}],p={toc:d},c="wrapper";function h(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ChangelogModal")," component is a modal dialog that displays the changelog or release notes for a new version of the\napplication. It is used to inform users about updates, changes, and new features in the application."),(0,a.kt)("h3",{id:"props"},"Props:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"showChangelogModal")," (boolean): Indicates whether the modal should be visible or hidden."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"setShowChangelogModal")," (function): A function to toggle the visibility of the modal.")),(0,a.kt)("h3",{id:"usage"},"Usage:"),(0,a.kt)("p",null,"You can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"ChangelogModal")," component as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"static",static:!0},"<ChangelogModal\n  showChangelogModal={isChangelogModalVisible}\n  setShowChangelogModal={setIsChangelogModalVisible}\n/>\n")),(0,a.kt)("p",null,"In this example, ",(0,a.kt)("inlineCode",{parentName:"p"},"isChangelogModalVisible")," is a boolean variable that controls whether the modal is displayed,\nand ",(0,a.kt)("inlineCode",{parentName:"p"},"setIsChangelogModalVisible")," is a function to toggle the modal's visibility."),(0,a.kt)("h3",{id:"modal-content"},"Modal Content:"),(0,a.kt)("p",null,"The modal contains the following sections:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},'Header Section: Displays the title "VERSION UPDATE" and includes a close button to dismiss the modal.')),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Content Section: Displays the changelog content, which is fetched from a remote source. The content is rendered using\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactMarkdown")," component to support Markdown formatting.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},'Footer Section: Contains a "Close" button to dismiss the modal.'))),(0,a.kt)("h4",{id:"fetching-changelog-content"},"Fetching Changelog Content:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"useEffect")," hook is used to fetch the changelog content from a remote source specified by ",(0,a.kt)("inlineCode",{parentName:"p"},"backendUrl"),". It sends a\nGET request to retrieve the content and updates the ",(0,a.kt)("inlineCode",{parentName:"p"},"mainMdContent")," state variable with the fetched Markdown content."),(0,a.kt)("h4",{id:"closing-the-modal"},"Closing the Modal:"),(0,a.kt)("p",null,'The modal can be closed by clicking the close button in the header or the "Close" button in the footer. Both buttons\ntrigger the ',(0,a.kt)("inlineCode",{parentName:"p"},"setShowChangelogModal")," function to hide the modal."),(0,a.kt)("h4",{id:"styling"},"Styling:"),(0,a.kt)("p",null,"The modal is styled using the Material-UI ",(0,a.kt)("inlineCode",{parentName:"p"},"Box")," component with various CSS styles to position and format the content. It\nis centered on the screen and has a responsive design to fit different screen sizes."),(0,a.kt)("h4",{id:"toasts"},"Toasts:"),(0,a.kt)("p",null,"The component uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"react-toastify")," library to display toast notifications in case of an error while fetching the\nchangelog content. If there is an error, a toast with an error message is shown to the user."),(0,a.kt)("h3",{id:"overall-purpose"},"Overall Purpose:"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"ChangelogModal")," component serves as a user-friendly way to inform users about updates and changes in the\napplication. It provides a structured and visually appealing presentation of changelog information, allowing users to\nstay informed about the latest developments in the software."))}h.isMDXComponent=!0}}]);