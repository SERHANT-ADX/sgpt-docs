"use strict";(self.webpackChunksgpt=self.webpackChunksgpt||[]).push([[3570],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),g=r,u=c["".concat(s,".").concat(g)]||c[g]||d[g]||i;return n?a.createElement(u,o(o({ref:t},m),{},{components:n})):a.createElement(u,o({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},7144:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},o=void 0,l={unversionedId:"Components/UI/ProgressiveImage/ProgressiveImage",id:"Components/UI/ProgressiveImage/ProgressiveImage",title:"ProgressiveImage",description:"The ProgressiveImg component is designed to display images progressively, starting with a placeholder image and",source:"@site/docs/Components/UI/ProgressiveImage/ProgressiveImage.md",sourceDirName:"Components/UI/ProgressiveImage",slug:"/Components/UI/ProgressiveImage/",permalink:"/sgpt-docs/Components/UI/ProgressiveImage/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Components/UI/ProgressiveImage/ProgressiveImage.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FileInput",permalink:"/sgpt-docs/Components/UI/FileInput/"},next:{title:"FilterListingsChips",permalink:"/sgpt-docs/Components/common/FilterListingsChips/"}},s={},p=[{value:"Props",id:"props",level:3},{value:"Private Styles",id:"private-styles",level:3},{value:"Component Structure",id:"component-structure",level:3},{value:"Example Usage",id:"example-usage",level:3},{value:"Overview",id:"overview",level:3}],m={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"ProgressiveImg")," component is designed to display images progressively, starting with a placeholder image and\ntransitioning to the actual image once it's loaded. This component enhances user experience by reducing the perception\nof slow loading times for images."),(0,r.kt)("h3",{id:"props"},"Props"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"src")," (string, required): The URL of the actual image to be displayed."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"alt")," (string, optional): The alternative text for the image."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"style")," (object, optional): Additional inline styles to be applied to the ",(0,r.kt)("inlineCode",{parentName:"li"},"img")," element.")),(0,r.kt)("h3",{id:"private-styles"},"Private Styles"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"loadingStyles"),": Defines styles for when the placeholder image is displayed (opacity 0%)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"loadedStyles"),": Defines styles for when the actual image is loaded (opacity 100%).")),(0,r.kt)("h3",{id:"component-structure"},"Component Structure"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Placeholder Wrapper"),": A ",(0,r.kt)("inlineCode",{parentName:"p"},"Box")," component serving as a wrapper for the placeholder and actual images.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Placeholder Image"),": The initial placeholder image displayed while the actual image is being loaded. It's shown\nusing ",(0,r.kt)("inlineCode",{parentName:"p"},"loadingStyles"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Actual Image"),": The actual image to be displayed once it's loaded. It's shown using ",(0,r.kt)("inlineCode",{parentName:"p"},"loadedStyles"),"."))),(0,r.kt)("h3",{id:"example-usage"},"Example Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"static",static:!0},"import ProgressiveImg from './ProgressiveImg';\n\n// ...\n\nconst MyComponent = () => {\n    const actualImageUrl = 'https://example.com/actual-image.jpg';\n\n    return (\n        <div>\n            <ProgressiveImg\n                src={actualImageUrl}\n                alt=\"Example Image\"\n            />\n            {/* Other content */}\n        </div>\n    );\n};\n\nexport default MyComponent;\n")),(0,r.kt)("h3",{id:"overview"},"Overview"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The component utilizes the ",(0,r.kt)("inlineCode",{parentName:"li"},"useState")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"useEffect")," hooks to manage the loading process."),(0,r.kt)("li",{parentName:"ul"},"A placeholder image is initially displayed, followed by a smooth transition to the actual image."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"backgroundImage")," CSS property is used to display the placeholder image for progressive loading."),(0,r.kt)("li",{parentName:"ul"},"Once the actual image is loaded, it's displayed with a smooth opacity transition effect."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"src"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"alt"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"style")," props can be provided to customize the behavior and appearance of the component.")),(0,r.kt)("p",null,"Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ProgressiveImg")," component to create a seamless loading experience for images, enhancing the visual appeal and\nresponsiveness of the web application."))}d.isMDXComponent=!0}}]);